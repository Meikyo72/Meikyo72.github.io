{"version":3,"sources":["api/quizQuestions4.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","registerServiceWorker.js","index.js"],"names":["quizQuestions","question","answers","type","content","Question","props","react_default","a","createElement","className","QuestionCount","counter","total","AnswerOption","name","checked","id","answerType","value","disabled","answer","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","components_QuestionCount","questionId","questionTotal","components_Question","answerOptions","map","key","components_AnswerOption","Result","quizResult","quizLength","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","answersCount","Correct","Wrong","result","handleAnswerSelected","bind","assertThisInitialized","shuffledQuestionOptions","shuffle","shuffledAnswerOptions","setState","updatedAnswersCount","update","defineProperty","$apply","currentValue","arguments","length","undefined","console","log","document","body","style","event","_this2","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","keys","answersCountValues","maxAnswerCount","Math","max","apply","filter","components_Quiz","components_Result","renderResult","renderQuiz","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+QA8LeA,SA9LK,CAChB,CACIC,SAAU,cACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,uBAEb,CACID,KAAM,QACNC,QAAS,oBAEb,CACID,KAAM,QACNC,QAAS,wDAIrB,CACIH,SAAU,KACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,uBAEb,CACID,KAAM,QACNC,QAAS,cAEb,CACID,KAAM,QACNC,QAAS,oBAIrB,CACIH,SAAU,OACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,mCAEb,CACID,KAAM,QACNC,QAAS,mCAEb,CACID,KAAM,QACNC,QAAS,oCAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,gCAEb,CACID,KAAM,QACNC,QAAS,6BAEb,CACID,KAAM,QACNC,QAAS,2BAIrB,CACIH,SAAU,KACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,4BAEb,CACID,KAAM,QACNC,QAAS,YAEb,CACID,KAAM,QACNC,QAAS,sBAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,kCAEb,CACID,KAAM,QACNC,QAAS,2BAEb,CACID,KAAM,QACNC,QAAS,8BAIrB,CACIH,SAAU,OACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,uBAEb,CACID,KAAM,QACNC,QAAS,+BAEb,CACID,KAAM,QACNC,QAAS,gCAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,4BAEb,CACID,KAAM,QACNC,QAAS,gCAEb,CACID,KAAM,QACNC,QAAS,iCAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,YAEb,CACID,KAAM,QACNC,QAAS,WAEb,CACID,KAAM,QACNC,QAAS,cAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,0BAEb,CACID,KAAM,QACNC,QAAS,wBAEb,CACID,KAAM,QACNC,QAAS,sBAIrB,CACIH,SAAU,MACVC,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,qBAEb,CACID,KAAM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","file":"static/js/main.99dd84de.chunk.js","sourcesContent":["var quizQuestions = [\n    {\n        question: \"Action List\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Vad, vem och när\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Lista med filmer\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Automatiserad d�rr med sensor i dörrkarmen\"\n            }\n        ]\n    },\n    {\n        question: \"AD\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Architecture Design\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Any Design\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Android Dreams\"\n            }\n        ]\n    },\n    {\n        question: \"ADRC\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Average Daily Remuneration Cost\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Available Data Rendered Correct\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Accumulated Daily Rodent Catch\"\n            }\n        ]\n    },\n    {\n        question: \"AKM\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Applied Knowledge Management\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Abnormal Knitting Manager\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Art Knowledge Mesures\"\n            }\n        ]\n    },\n    {\n        question: \"AM\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Appliacations Management\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Ask Mama\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Assembler Master\"\n            }\n        ]\n    },\n    {\n        question: \"API\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Appliacation Program Interface\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Anti Personel Intrusion\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Armed Potato Infestation\"\n            }\n        ]\n    },\n    {\n        question: \"ASAP\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"As Soon As Possible\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Airforce Simpleton At Party\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Arbitrary Sell All Program\"\n            }\n        ]\n    },\n    {\n        question: \"AQA\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Assignment Quality Audit\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Anchor Qualified Application\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Awareness Quantified Allies\"\n            }\n        ]\n    },\n    {\n        question: \"B's\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Benefits\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Bananas\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Bitcoins\"\n            }\n        ]\n    },\n    {\n        question: \"BAP\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Bemanning Av Prospects\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Bud American Pilsner\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Byte Av Praliner\"\n            }\n        ]\n    },\n    {\n        question: \"BCS\",\n        answers: [\n            {\n                type: \"Correct\",\n                content: \"Bid Control Sheet\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Bidé Containing Sheet\"\n            },\n            {\n                type: \"Wrong\",\n                content: \"Better Call Someone\"\n            }\n        ]\n    }\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n function Question(props) {\n   return (\n     <h2 className=\"question\">{props.content}</h2>\n   );\n }\n\n Question.propTypes = {\n   content: PropTypes.string\n };\n\n export default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n function QuestionCount(props) {\n   return (\n     <div className=\"questionCount\">\n       Fråga <span>{props.counter}</span> av <span>{props.total}</span>\n     </div>\n   );\n }\n\n QuestionCount.propTypes = {\n   counter: PropTypes.number,\n   total: PropTypes.number\n };\n\n export default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n  function AnswerOption(props) {\n    return (\n      <li className=\"answerOption\">\n        <input\n          type=\"radio\"\n          className=\"radioCustomButton\"\n          name=\"radioGroup\"\n          checked={false}\n          /*checked={props.answerType === props.answer}*/\n          id={props.answerType}\n          value={props.answerType}\n          disabled={props.answer}\n          onChange={props.onAnswerSelected}\n        />\n        <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n          {props.answerContent}\n        </label>\n      </li>\n    );\n  }\n\n  AnswerOption.propTypes = {\n    answerType: PropTypes.string,\n    answerContent: PropTypes.string,\n    answer: PropTypes.string,\n    onAnswerSelected: PropTypes.func\n  };\n\n  export default AnswerOption;\n","import React from 'react';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport PropTypes from 'prop-types';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n    return (\n       <div className=\"quiz\">\n         <QuestionCount\n           counter={props.questionId}\n           total={props.questionTotal}\n         />\n         <Question content={props.question} />\n         <ul className=\"answerOptions\">\n           {props.answerOptions.map(renderAnswerOptions)}\n         </ul>\n       </div>\n    );\n  }\n\n  Quiz.propTypes = {\n    answer: PropTypes.string,\n    answerOptions: PropTypes.array,\n    counter: PropTypes.number,\n    question: PropTypes.string,\n    questionId: PropTypes.number,\n    questionTotal: PropTypes.number,\n    onAnswerSelected: PropTypes.func\n  };\n\n  export default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n  function Result(props) {\n    return (\n      <div className=\"result\">\n            Du har <strong>{props.quizResult}</strong> korrekta svar av {props.quizLength}!\n      </div>\n    );\n  }\n\n  Result.propTypes = {\n      quizResult: PropTypes.number,\n      quizLength: PropTypes.number\n  };\n\n  export default Result;\n","import React, { Component } from 'react';\nimport './App.css';\nimport quizQuestions from './api/quizQuestions4';\nimport Quiz from './components/Quiz';\nimport update from 'immutability-helper';\nimport Result from './components/Result';\nimport { shuffle } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n     counter: 0,\n     questionId: 1,\n     question: '',\n     answerOptions: [],\n     answer: '',\n        answersCount: {\n         Correct: 0,\n         Wrong: 0,\n     },\n     result: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n  componentWillMount() {\n    const shuffledQuestionOptions = shuffle(quizQuestions);\n    const shuffledAnswerOptions = shuffledQuestionOptions.map((question) => shuffle(question.answers));\n\n\n    this.setState({\n      question: shuffledQuestionOptions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  setUserAnswer(answer) {\n    const updatedAnswersCount = update(this.state.answersCount, {\n      [answer]: {$apply: (currentValue=0) => ++currentValue}\n    });\n    this.setState({\n      answersCount: updatedAnswersCount,\n      answer: answer\n    });\n    console.log(answer);\n    if(answer===\"Correct\"){\n      document.body.style='background: green;'\n    }else if(answer===\"Wrong\"){\n      document.body.style='background: red;'\n    }\n  }\n\n  setNextQuestion() {\n    document.body.style='background: white;';\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: shuffle(quizQuestions[counter].answers),\n      answer: ''\n    });\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n    if (this.state.questionId < quizQuestions.length) {\n        setTimeout(() => this.setNextQuestion(), 2000);\n      } else {\n        setTimeout(() => this.setResults(this.getResults()), 2000);\n      }\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter((key) => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults (result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: result[0] + ' and ' + result[1] });\n    }\n  }\n  renderQuiz() {\n      return (\n        <Quiz\n          answer={this.state.answer}\n          answerOptions={this.state.answerOptions}\n          questionId={this.state.questionId}\n          question={this.state.question}\n          questionTotal={quizQuestions.length}\n          onAnswerSelected={this.handleAnswerSelected}\n        />\n      );\n    }\n\n    renderResult() {\n        return (\n            <Result\n                quizResult={this.state.answersCount.Correct}\n                quizLength={quizQuestions.length}\n            />\n      );\n    }\n    render() {\n        console.log(this.state.answersCount.Correct);\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>Onboarding Quiz programmerad i React av Petri</h2>\n          <h3>Beta version</h3>\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n    )\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}